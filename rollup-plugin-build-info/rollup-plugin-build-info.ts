import type { Plugin } from "rollup";
import { exec } from "node:child_process";

const MODULE_NAME = "build-info";
const LOAD_NAME = "\0build-info";

export type BuildInfo = {
  timestamp: Date;
  commit: string;
};

export async function buildInfo(): Promise<BuildInfo> {
  return new Promise((resolve, reject) => {
    exec("git rev-parse HEAD", {}, (error, stdout, stderr) => {
      if (stderr) {
        console.warn(stderr);
      }
      if (error) {
        reject(error);
      }
      const commit = stdout.trim();
      const timestamp = new Date();
      resolve({ timestamp, commit });
    });
  });
}

export default function plugin(): Plugin {
  let info = buildInfo();
  return {
    name: "rollup-plugin-build-info",
    buildStart() {
      info = buildInfo();
    },
    resolveId(source) {
      return source === MODULE_NAME ? LOAD_NAME : null;
    },
    async load(id) {
      if (id !== LOAD_NAME) {
        return null;
      }
      const { commit, timestamp } = await info;
      return [
        `// Generated by rollup-plugin-build-info`,
        ``,
        `export const commit = "${commit}";`,
        `export const timestamp = new Date("${timestamp.toISOString()}");`,
        ``,
        `export default { commit, timestamp };`,
        ``,
      ].join("\n");
    },
  };
}
